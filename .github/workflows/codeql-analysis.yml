name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '23 11 * * 6'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        #language: [ 'cpp', 'javascript', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed
        os: [ 'macos-latest', 'ubuntu-latest', 'windows-latest' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Qt on Linux
      run: |
        sudo apt-get update
        sudo apt install build-essential qt5-qmake qtdeclarative5-dev qt5-default qttools5-dev-tools libjack-jackd2-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Install Qt on MacOS
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        dir: '${{ github.workspace }}'
        extra: '--base https://download.qt.io/official_releases/qt/5.12/5.12.2/single/qt-everywhere-src-5.12.2.tar.xz'
      if: matrix.os == 'macos-latest'

    - name: Install Qt on Windows
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        dir: '${{ github.workspace }}'
        arch: 'win64_msvc2019_64'
        tools: 'tools_qtcreator,4.14.0-0,qt.tools.qtcreator'
        extra: '--base https://download.qt.io/official_releases/qt/5.12/5.12.2/single/qt-everywhere-src-5.12.2.tar.xz'
      if: matrix.os == 'windows-latest'

    - name: Install ASIOSDK
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "http://www.steinberg.net/asiosdk" -OutFile "asiosdk.zip"
        Expand-Archive -Path "asiosdk.zip" -DestinationPath "ASIOSDK"
        Get-ChildItem -Path "ASIOSDK/asiosdk_2*/*" -Recurse | Move-Item -Destination "windows/ASIOSDK2"
      if: matrix.os == 'windows-latest'

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Build elsewhere
      run: |
        [ -x /Users/runner/work/jamulus/jamulus/Qt/5.15.2/clang_64/bin/qmake ] && \
          /Users/runner/work/jamulus/jamulus/Qt/5.15.2/clang_64/bin/qmake || qmake
        make
      if: matrix.os != 'windows-latest'

    - name: Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      if: matrix.os == 'windows-latest'

    - name: Build on Windows
      shell: cmd
      run: |
        D:\a\jamulus\jamulus\Qt\5.15.2\msvc2019_64\bin\qmake.exe Jamulus.pro -spec win32-msvc
        D:\a\jamulus\jamulus\Qt\Tools\QtCreator\bin\jom.exe qmake_all
        D:\a\jamulus\jamulus\Qt\Tools\QtCreator\bin\jom.exe
      if: matrix.os == 'windows-latest'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
